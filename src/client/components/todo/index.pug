.ui.segments
    h3.ui.top.attached.block.header(class!="{{#if doneItemsLength === itemsLength}}inverted green{{/if}}")
        | {{ title || 'My Todo List' }} ({{ doneItemsLength }}/{{ itemsLength }})
        checkbox.right.floated.transparent(checked="{{ isEditable }}") Edit

    .ui.attached.segment
        progress.top.attached.blue(value="{{doneItemsLength}}" max="{{itemsLength}}")
        .ui.middle.aligned.divided.list
            +each('checklist')
                .item(class="{{#if .isDone}}green{{/if}} {{#if .isEditing}}red{{/if}}")
                    .content
                        checkbox.transparent(
                            checked="{{ .isDone }}"
                            on-statechange="statechanged"
                            value="{{ .id }}"
                            )
                            +iff('isEditing(.id) && isEditable')
                                .ui.input 
                                    input(value="{{ editingContent }}")
                            +else
                                span(class!="{{# .isDone}}todo-item-done {{/}}").
                                    {{ .content }} ({{ unixToReadable(.dueTimestamp)}})
                            +endif

                    +if('isEditable')
                        ack-button(
                            on-buttonclick="startEditing"
                            value="{{ .id }}"
                            disabled="{{ isEditing(.id) }}"
                            ) Edit

                        +if('isEditing(.id)')
                            date-picker(unix="{{ newDueTimestamp }}" mode="popup")
                            ack-button(value="{{ . }}" on-buttonclick="saveChanges") Save
                            ack-button(on-buttonclick="cancelEdit") Cancel
    .ui.attached.segment 
        .ui.equal.width.stackable.grid 
            .column
                i.plus.icon
                .ui.input: input(value="{{ newItem.content }}" placeholder="content...")
            .column 
                date-picker(unix="{{ newItem.dueTimestamp }}")
            .column
                ack-button(on-buttonclick="addNewItem" value="{{ newItem }}") Add New Item
